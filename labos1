#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_LEN 1024

void command1() {
    // Команда 1: Чита од тастатурата и пишува во pipe1.txt
    FILE *pipe1 = fopen("pipe1.txt", "w");
    if (pipe1 == NULL) {
        perror("Не може да се отвори pipe1.txt");
        exit(1);
    }

    char input[MAX_LEN];
    printf("Внесете текст: ");
    fgets(input, MAX_LEN, stdin); // Читање на текст од тастатурата

    // Запишување на текст во pipe1.txt
    fprintf(pipe1, "%s", input);
    fclose(pipe1);
}

void command2() {
    // Команда 2: Чита од pipe1.txt и пишува во pipe2.txt
    FILE *pipe1 = fopen("pipe1.txt", "r");
    if (pipe1 == NULL) {
        perror("Не може да се отвори pipe1.txt");
        exit(1);
    }

    FILE *pipe2 = fopen("pipe2.txt", "w");
    if (pipe2 == NULL) {
        perror("Не може да се отвори pipe2.txt");
        exit(1);
    }

    char buffer[MAX_LEN];
    while (fgets(buffer, MAX_LEN, pipe1) != NULL) {
        // Запишување во pipe2.txt
        fprintf(pipe2, "%s", buffer);
    }

    fclose(pipe1);
    fclose(pipe2);
}

void command3() {
    // Команда 3: Чита од pipe2.txt и брои празни места
    FILE *pipe2 = fopen("pipe2.txt", "r");
    if (pipe2 == NULL) {
        perror("Не може да се отвори pipe2.txt");
        exit(1);
    }

    char buffer[MAX_LEN];
    int space_count = 0;

    while (fgets(buffer, MAX_LEN, pipe2) != NULL) {
        // Броење на празни места
        for (int i = 0; i < strlen(buffer); i++) {
            if (buffer[i] == ' ') {
                space_count++;
            }
        }
    }

    fclose(pipe2);

    // Печатење на бројот на празни места
    printf("Број на празни места: %d\n", space_count);
}

int main(int argc, char *argv[]) {
    if (argc != 2) {
        fprintf(stderr, "Исполнете ја програмата со аргумент (1, 2 или 3) за да ја повикате соодветната команда.\n");
        return 1;
    }

    int command = atoi(argv[1]);

    switch (command) {
        case 1:
            command1();
            break;
        case 2:
            command2();
            break;
        case 3:
            command3();
            break;
        default:
            fprintf(stderr, "Неважечка команда. Ве молиме внесете 1, 2 или 3.\n");
            return 1;
    }

    return 0;
}
